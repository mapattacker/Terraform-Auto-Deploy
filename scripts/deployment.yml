---
- hosts: all
  become: true
  
  tasks:

  # define home dir
  - name: define home dir for Amazon Linux
    set_fact:
      home_dir: "/home/ec2-user"
    when: ansible_distribution == "Amazon"

  - name: define home dir for Debian
    set_fact:
      home_dir: "/home/ubuntu"
    when: ansible_os_family == "Debian"


  - name: download docker-compose
    command: aws s3 cp s3://{{COMPOSE_PATH}} {{home_dir}}/docker-compose.yml


  # AL2023 has a new API that requires a token to retrieve instance metadata
  - name: login ECR, non-AL2023
    shell: |
      AWS_ACCOUNT=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .accountId)
      AWS_REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/region)
      aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com
    when: (ansible_distribution == "Amazon" and ansible_distribution_version != "2023") or ansible_os_family == "Debian"

  - name: login ECR, AL2023
    shell: |
      TOKEN=$(curl --request PUT "http://169.254.169.254/latest/api/token" --header "X-aws-ec2-metadata-token-ttl-seconds: 3600")
      AWS_REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/region --header "X-aws-ec2-metadata-token: $TOKEN")
      AWS_ACCOUNT=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document --header "X-aws-ec2-metadata-token: $TOKEN" | jq -r .accountId)
      aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com
    when: ansible_distribution == "Amazon" and ansible_distribution_version == "2023"

  - name: prune docker
    command: docker system prune -f

  - name: pull docker images
    command: docker compose -f {{home_dir}}/docker-compose.yml pull

  - name: deploy docker images
    command: docker compose -f {{home_dir}}/docker-compose.yml up -d --remove-orphans